// Generated by purs version 0.13.6
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as React_Basic from "../React.Basic/index.js";
import * as React_Basic_DOM from "../React.Basic.DOM/index.js";
import * as React_Basic_DOM_Events from "../React.Basic.DOM.Events/index.js";
import * as React_Basic_DOM_Generated from "../React.Basic.DOM.Generated/index.js";
import * as React_Basic_Events from "../React.Basic.Events/index.js";
import * as Todo_View from "../Todo.View/index.js";
var Focus = (function () {
    function Focus() {

    };
    Focus.value = new Focus();
    return Focus;
})();
var Change = (function () {
    function Change(value0) {
        this.value0 = value0;
    };
    Change.create = function (value0) {
        return new Change(value0);
    };
    return Change;
})();
var KeyDown = (function () {
    function KeyDown(value0) {
        this.value0 = value0;
    };
    KeyDown.create = function (value0) {
        return new KeyDown(value0);
    };
    return KeyDown;
})();
var Commit = (function () {
    function Commit() {

    };
    Commit.value = new Commit();
    return Commit;
})();
var taskComponent = React_Basic.createComponent("Task");
var render = function (v) {
    var description = Data_Maybe.fromMaybe(v.props.task.description)(v.state.edits);
    var commitAction = (function () {
        var newDescription = Data_String_Common.trim(Data_Maybe.fromMaybe("")(v.state.edits));
        if (newDescription === "") {
            return React_Basic.NoUpdate.value;
        };
        var state$prime = {
            edits: Data_Maybe.Nothing.value
        };
        return new React_Basic.UpdateAndSideEffects(state$prime, Data_Function["const"](v.props.onCommit(newDescription)));
    })();
    var send = React_Basic.runUpdate(function (_self) {
        return function (v1) {
            if (v1 instanceof Focus) {
                return React_Basic.Update.create({
                    edits: new Data_Maybe.Just(v.props.task.description)
                });
            };
            if (v1 instanceof Change) {
                return new React_Basic.Update({
                    edits: v1.value0
                });
            };
            if (v1 instanceof KeyDown) {
                if (v1.value0 instanceof Data_Maybe.Just && v1.value0.value0 === "Escape") {
                    return React_Basic.Update.create({
                        edits: Data_Maybe.Nothing.value
                    });
                };
                if (v1.value0 instanceof Data_Maybe.Just && v1.value0.value0 === "Enter") {
                    return commitAction;
                };
                return React_Basic.NoUpdate.value;
            };
            if (v1 instanceof Commit) {
                return commitAction;
            };
            throw new Error("Failed pattern match at Todo.Task (line 97, column 7 - line 110, column 31): " + [ v1.constructor.name ]);
        };
    });
    var classNames = Data_String_Common.joinWith(" ")([ Data_Monoid.guard(Data_Monoid.monoidString)(Data_Maybe.isJust(v.state.edits))("editing"), Data_Monoid.guard(Data_Monoid.monoidString)(v.props.task.completed)("completed") ]);
    return React_Basic_DOM_Generated.li()({
        className: classNames,
        children: [ Todo_View.classy(React_Basic_DOM_Generated.div())("view")([ React_Basic_DOM_Generated.input()({
            className: "toggle",
            type: "checkbox",
            checked: v.props.task.completed,
            onChange: React_Basic_Events.handler_(v.props.onCheck)
        }), React_Basic_DOM_Generated.label()({
            onDoubleClick: React_Basic_DOM_Events.capture_(send(v)(Focus.value)),
            children: [ React_Basic_DOM.text(description) ]
        }), React_Basic_DOM_Generated.button()({
            className: "destroy",
            onClick: React_Basic_Events.handler_(v.props.onDelete)
        }) ]), React_Basic_DOM_Generated.input()({
            className: "edit",
            value: description,
            name: "title",
            onChange: React_Basic_DOM_Events.capture(React_Basic_DOM_Events.targetValue)((function () {
                var $16 = send(v);
                return function ($17) {
                    return $16(Change.create($17));
                };
            })()),
            onBlur: React_Basic_DOM_Events.capture_(send(v)(Commit.value)),
            onKeyDown: React_Basic_Events.handler(React_Basic_DOM_Events.key)((function () {
                var $18 = send(v);
                return function ($19) {
                    return $18(KeyDown.create($19));
                };
            })())
        }) ]
    });
};
var initialState = {
    edits: Data_Maybe.Nothing.value
};
var component = function (props) {
    return React_Basic.make()(taskComponent)({
        render: render,
        initialState: initialState
    })(props);
};
export {
    Focus,
    Change,
    KeyDown,
    Commit,
    initialState,
    taskComponent,
    component,
    render
};
