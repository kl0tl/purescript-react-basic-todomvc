// Generated by purs version 0.13.6
import * as $foreign from "./foreign.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Effect_Uncurried from "../Effect.Uncurried/index.js";
import * as Effect_Unsafe from "../Effect.Unsafe/index.js";
import * as Foreign from "../Foreign/index.js";
var parseJSON = (function () {
    var $0 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)((function () {
        var $3 = Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList);
        return function ($4) {
            return $3(Foreign.ForeignError.create(Effect_Exception.message($4)));
        };
    })());
    var $1 = Effect_Uncurried.runEffectFn1($foreign.parseJSONImpl);
    return function ($2) {
        return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity($0(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"]($1($2))))));
    };
})();
var decodeJSONWith = function (f) {
    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(f)(parseJSON);
};
export {
    parseJSON,
    decodeJSONWith
};
