// Generated by purs version 0.13.6
import * as Control_Alt from "../Control.Alt/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Generic_Rep from "../Data.Generic.Rep/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Foreign from "../Foreign/index.js";
var GenericEncodeEnum = function (encodeEnum) {
    this.encodeEnum = encodeEnum;
};
var GenericDecodeEnum = function (decodeEnum) {
    this.decodeEnum = decodeEnum;
};
var encodeEnum = function (dict) {
    return dict.encodeEnum;
};
var genericEncodeEnum = function (dictGeneric) {
    return function (dictGenericEncodeEnum) {
        return function (opts) {
            var $175 = encodeEnum(dictGenericEncodeEnum)(opts);
            var $176 = Data_Generic_Rep.from(dictGeneric);
            return function ($177) {
                return $175($176($177));
            };
        };
    };
};
var sumGenericEncodeEnum = function (dictGenericEncodeEnum) {
    return function (dictGenericEncodeEnum1) {
        return new GenericEncodeEnum(function (opts) {
            return function (v) {
                if (v instanceof Data_Generic_Rep.Inl) {
                    return encodeEnum(dictGenericEncodeEnum)(opts)(v.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr) {
                    return encodeEnum(dictGenericEncodeEnum1)(opts)(v.value0);
                };
                throw new Error("Failed pattern match at Foreign.Generic.EnumEncoding (line 92, column 1 - line 96, column 46): " + [ opts.constructor.name, v.constructor.name ]);
            };
        });
    };
};
var decodeEnum = function (dict) {
    return dict.decodeEnum;
};
var genericDecodeEnum = function (dictGeneric) {
    return function (dictGenericDecodeEnum) {
        return function (opts) {
            var $178 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric));
            var $179 = decodeEnum(dictGenericDecodeEnum)(opts);
            return function ($180) {
                return $178($179($180));
            };
        };
    };
};
var sumGenericDecodeEnum = function (dictGenericDecodeEnum) {
    return function (dictGenericDecodeEnum1) {
        return new GenericDecodeEnum(function (opts) {
            return function (f) {
                return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inl.create)(decodeEnum(dictGenericDecodeEnum)(opts)(f)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inr.create)(decodeEnum(dictGenericDecodeEnum1)(opts)(f)));
            };
        });
    };
};
var ctorNoArgsGenericEncodeEnum = function (dictIsSymbol) {
    return new GenericEncodeEnum(function (v) {
        return function (v1) {
            var ctorName = v.constructorTagTransform(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value));
            return Foreign.unsafeToForeign(ctorName);
        };
    });
};
var ctorNoArgsGenericDecodeEnum = function (dictIsSymbol) {
    return new GenericDecodeEnum(function (v) {
        return function (f) {
            var ctorName = v.constructorTagTransform(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value));
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readString(f))(function (tag) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag === ctorName)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(ctorName) + (" tag for unary constructor literal " + ctorName))))))(function ($dollar__unused) {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Generic_Rep.NoArguments.value);
                });
            });
        };
    });
};
export {
    decodeEnum,
    encodeEnum,
    genericDecodeEnum,
    genericEncodeEnum,
    GenericDecodeEnum,
    GenericEncodeEnum,
    sumGenericDecodeEnum,
    ctorNoArgsGenericDecodeEnum,
    sumGenericEncodeEnum,
    ctorNoArgsGenericEncodeEnum
};
