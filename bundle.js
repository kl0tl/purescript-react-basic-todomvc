// Generated by purs bundle 0.13.6
var PS = {};
(function($PS) {
  
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                            
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                      
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign["unit"];
})(PS);
(function($PS) {
  
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
})(PS);
(function($PS) {
  
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function($PS) {
  
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];                  
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];// Generated by purs version 0.13.6
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                  
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                  
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];                  
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
})(PS);
(function($PS) {
  
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                  
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];            
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                         
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["bindMaybe"] = bindMaybe;
})(PS);
(function($PS) {
  
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applicativeEither"] = applicativeEither;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];              
  var ExceptT = function (x) {
      return x;
  };
  var withExceptT = function (dictFunctor) {
      return function (f) {
          return function (v) {
              var mapLeft = function (v1) {
                  return function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return new Data_Either.Right(v2.value0);
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return new Data_Either.Left(v1(v2.value0));
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): " + [ v1.constructor.name, v2.constructor.name ]);
                  };
              };
              return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
          };
      };
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                      if (rm instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                      };
                      if (rm instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                              if (rn instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                              };
                              if (rn instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [ rn.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [ rm.constructor.name ]);
                  });
              };
          });
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["withExceptT"] = withExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["tt"] = tt;
  exports["conj"] = conj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function($PS) {
  
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  var guard = function (dictMonoid) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return mempty(dictMonoid);
              };
              throw new Error("Failed pattern match at Data.Monoid (line 73, column 1 - line 73, column 49): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["guard"] = guard;
  exports["monoidString"] = monoidString;
})(PS);
(function($PS) {
  
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];                        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };                        
  var newtypeConj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Conj.Conj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["newtypeConj"] = newtypeConj;
})(PS);
(function($PS) {
  
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];            
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                  
  var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT((function () {
          var $2 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
          return function ($3) {
              return Data_Identity.Identity(f($2($3)));
          };
      })());
  };
  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
  exports["withExcept"] = withExcept;
})(PS);
(function($PS) {
  
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                     
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  exports["length"] = $foreign["length"];
  exports["cons"] = $foreign["cons"];
  exports["filter"] = $foreign["filter"];
  exports["null"] = $$null;
})(PS);
(function($PS) {
  
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];// Generated by purs version 0.13.6
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);  
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqInt"] = eqInt;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["intercalate"] = intercalate;
  exports["all"] = all;
  exports["foldableArray"] = foldableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];            
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          var $49 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
              return function (v) {
                  return f(v.value0)(y)(v.value1);
              };
          })(z);
          var $50 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($51) {
              return $49($50($51));
          };
      };
  }, function (f) {
      return function (z) {
          var $52 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
              return function (y) {
                  return f(v.value0)(v.value1)(y);
              };
          })(z);
          var $53 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($54) {
              return $52($53($54));
          };
      };
  });
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn2"] = $foreign["runFn2"];
})(PS);
(function($PS) {
  
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];               
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
})(PS);
(function($PS) {
  
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];        
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function($PS) {
  
  $PS["Data.Generic.Rep.Show"] = $PS["Data.Generic.Rep.Show"] || {};
  var exports = $PS["Data.Generic.Rep.Show"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];                  
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function($PS) {
  
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
})(PS);
(function($PS) {
  
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Functor = $PS["Data.Functor"];                          
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS);
(function($PS) {
  
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];                      
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });           
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, (function () {
      var $233 = Data_NonEmpty.singleton(plusList);
      return function ($234) {
          return NonEmptyList($233($234));
      };
  })());
  exports["NonEmptyList"] = NonEmptyList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS);
(function($PS) {
  
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  exports["singleton"] = singleton;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["null"] = $foreign["null"];
  exports["notNull"] = $foreign["notNull"];
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);
(function(exports) {
  "use strict";

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.trim = function (s) {
    return s.trim();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                  
  var $$null = function (s) {
      return s === "";
  };
  exports["toLower"] = $foreign["toLower"];
  exports["trim"] = $foreign["trim"];
  exports["joinWith"] = $foreign["joinWith"];
  exports["null"] = $$null;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                        
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function($PS) {
  
  $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {};
  var exports = $PS["Data.TraversableWithIndex"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Traversable = $PS["Data.Traversable"];    
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndexDefault = function (dictTraversableWithIndex) {
      return function (dictApplicative) {
          return function (f) {
              var $19 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
              var $20 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
              return function ($21) {
                  return $19($20($21));
              };
          };
      };
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  }; 
  var traversableWithIndexArray = new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexArray;
  }, function () {
      return Data_FunctorWithIndex.functorWithIndexArray;
  }, function () {
      return Data_Traversable.traversableArray;
  }, function (dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  });
  exports["traverseWithIndex"] = traverseWithIndex;
  exports["traversableWithIndexArray"] = traversableWithIndexArray;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                      
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.message = function (e) {
    return e.message;
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                  
  var $$try = function (action) {
      return $foreign.catchException((function () {
          var $0 = Control_Applicative.pure(Effect.applicativeEffect);
          return function ($1) {
              return $0(Data_Either.Left.create($1));
          };
      })())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };
  exports["message"] = $foreign["message"];
  exports["try"] = $$try;
})(PS);
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffectFn3 = function runEffectFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign["mkEffectFn1"];
  exports["runEffectFn1"] = $foreign["runEffectFn1"];
  exports["runEffectFn3"] = $foreign["runEffectFn3"];
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign["unsafePerformEffect"];
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];                                        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
      var fromNumber = (function () {
          var $109 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
          return function ($110) {
              return $109(Data_Int.fromNumber($110));
          };
      })();
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };
  var readString = unsafeReadTagged("String");
  exports["unsafeToForeign"] = $foreign["unsafeToForeign"];
  exports["typeOf"] = $foreign["typeOf"];
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["readInt"] = readInt;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
})(PS);
(function($PS) {
  
  $PS["Foreign.Generic.EnumEncoding"] = $PS["Foreign.Generic.EnumEncoding"] || {};
  var exports = $PS["Foreign.Generic.EnumEncoding"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign = $PS["Foreign"];                                
  var GenericEncodeEnum = function (encodeEnum) {
      this.encodeEnum = encodeEnum;
  };
  var GenericDecodeEnum = function (decodeEnum) {
      this.decodeEnum = decodeEnum;
  };
  var encodeEnum = function (dict) {
      return dict.encodeEnum;
  };
  var genericEncodeEnum = function (dictGeneric) {
      return function (dictGenericEncodeEnum) {
          return function (opts) {
              var $36 = encodeEnum(dictGenericEncodeEnum)(opts);
              var $37 = Data_Generic_Rep.from(dictGeneric);
              return function ($38) {
                  return $36($37($38));
              };
          };
      };
  };
  var sumGenericEncodeEnum = function (dictGenericEncodeEnum) {
      return function (dictGenericEncodeEnum1) {
          return new GenericEncodeEnum(function (opts) {
              return function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return encodeEnum(dictGenericEncodeEnum)(opts)(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return encodeEnum(dictGenericEncodeEnum1)(opts)(v.value0);
                  };
                  throw new Error("Failed pattern match at Foreign.Generic.EnumEncoding (line 92, column 1 - line 96, column 46): " + [ opts.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var decodeEnum = function (dict) {
      return dict.decodeEnum;
  };
  var genericDecodeEnum = function (dictGeneric) {
      return function (dictGenericDecodeEnum) {
          return function (opts) {
              var $39 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric));
              var $40 = decodeEnum(dictGenericDecodeEnum)(opts);
              return function ($41) {
                  return $39($40($41));
              };
          };
      };
  };
  var sumGenericDecodeEnum = function (dictGenericDecodeEnum) {
      return function (dictGenericDecodeEnum1) {
          return new GenericDecodeEnum(function (opts) {
              return function (f) {
                  return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inl.create)(decodeEnum(dictGenericDecodeEnum)(opts)(f)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inr.create)(decodeEnum(dictGenericDecodeEnum1)(opts)(f)));
              };
          });
      };
  };
  var ctorNoArgsGenericEncodeEnum = function (dictIsSymbol) {
      return new GenericEncodeEnum(function (v) {
          return function (v1) {
              var ctorName = v.constructorTagTransform(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value));
              return Foreign.unsafeToForeign(ctorName);
          };
      });
  };
  var ctorNoArgsGenericDecodeEnum = function (dictIsSymbol) {
      return new GenericDecodeEnum(function (v) {
          return function (f) {
              var ctorName = v.constructorTagTransform(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value));
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readString(f))(function (tag) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag === ctorName)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(ctorName) + (" tag for unary constructor literal " + ctorName))))))(function () {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Generic_Rep.NoArguments.value);
                  });
              });
          };
      });
  };
  exports["genericDecodeEnum"] = genericDecodeEnum;
  exports["genericEncodeEnum"] = genericEncodeEnum;
  exports["sumGenericDecodeEnum"] = sumGenericDecodeEnum;
  exports["ctorNoArgsGenericDecodeEnum"] = ctorNoArgsGenericDecodeEnum;
  exports["sumGenericEncodeEnum"] = sumGenericEncodeEnum;
  exports["ctorNoArgsGenericEncodeEnum"] = ctorNoArgsGenericEncodeEnum;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeStringify = function (x) {
    return JSON.stringify(x);
  };
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeStringify"] = $foreign["unsafeStringify"];
})(PS);
(function(exports) {
  "use strict";

  /*
  It would be very tempting to write these as:
  exports.setItem_ =  window.localStorage.setItem;

  However, it creates weird errors and does not work as expected.

  JavaScript, not even once.
*/  

  exports.setItem_ = function(k, v) {
    window.localStorage.setItem(k, v);
  };

  exports.getItem_ = function(k) {
    return window.localStorage.getItem(k);
  };
})(PS["LocalStorage"] = PS["LocalStorage"] || {});
(function(exports) {
  exports._parseJSON = JSON.parse;
})(PS["Simple.JSON"] = PS["Simple.JSON"] || {});
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign["unsafeGet"];
})(PS);
(function($PS) {
  
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];// Generated by purs version 0.13.6
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  
  $PS["Simple.JSON"] = $PS["Simple.JSON"] || {};
  var exports = $PS["Simple.JSON"];
  var $foreign = $PS["Simple.JSON"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];
  var WriteForeignFields = function (writeImplFields) {
      this.writeImplFields = writeImplFields;
  };
  var WriteForeign = function (writeImpl) {
      this.writeImpl = writeImpl;
  };
  var ReadForeignFields = function (getFields) {
      this.getFields = getFields;
  };
  var ReadForeign = function (readImpl) {
      this.readImpl = readImpl;
  };
  var writeImplFields = function (dict) {
      return dict.writeImplFields;
  };
  var writeImpl = function (dict) {
      return dict.writeImpl;
  };
  var writeJSON = function (dictWriteForeign) {
      var $87 = writeImpl(dictWriteForeign);
      return function ($88) {
          return Global_Unsafe.unsafeStringify($87($88));
      };
  };
  var writeForeignString = new WriteForeign(Foreign.unsafeToForeign);
  var writeForeignInt = new WriteForeign(Foreign.unsafeToForeign); 
  var writeForeignBoolean = new WriteForeign(Foreign.unsafeToForeign);
  var writeForeignArray = function (dictWriteForeign) {
      return new WriteForeign(function (xs) {
          return Foreign.unsafeToForeign(Data_Functor.map(Data_Functor.functorArray)(writeImpl(dictWriteForeign))(xs));
      });
  };
  var recordWriteForeign = function (dictRowToList) {
      return function (dictWriteForeignFields) {
          return new WriteForeign(function (rec) {
              var steps = writeImplFields(dictWriteForeignFields)(Type_Data_RowList.RLProxy.value)(rec);
              return Foreign.unsafeToForeign(Record_Builder.build(steps)({}));
          });
      };
  };
  var readString = new ReadForeign(Foreign.readString);
  var readInt = new ReadForeign(Foreign.readInt);
  var readImpl = function (dict) {
      return dict.readImpl;
  };                                                                                                                                      
  var readFieldsNil = new ReadForeignFields(function (v) {
      return function (v1) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
      };
  });                                              
  var readBoolean = new ReadForeign(Foreign.readBoolean);
  var readArray = function (dictReadForeign) {
      return new ReadForeign((function () {
          var readAtIdx = function (i) {
              return function (f) {
                  return Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i)))(readImpl(dictReadForeign)(f));
              };
          };
          return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(readAtIdx))(Foreign.readArray);
      })());
  };
  var parseJSON = (function () {
      var $102 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)((function () {
          var $105 = Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList);
          return function ($106) {
              return $105(Foreign.ForeignError.create(Effect_Exception.message($106)));
          };
      })());
      var $103 = Effect_Uncurried.runEffectFn1($foreign["_parseJSON"]);
      return function ($104) {
          return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity($102(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"]($103($104))))));
      };
  })();
  var readJSON = function (dictReadForeign) {
      var $107 = Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(parseJSON);
      return function ($108) {
          return Control_Monad_Except.runExcept($107($108));
      };
  }; 
  var nilWriteForeignFields = new WriteForeignFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var getFields = function (dict) {
      return dict.getFields;
  };
  var readRecord = function (dictRowToList) {
      return function (dictReadForeignFields) {
          return new ReadForeign(function (o) {
              return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({}))(getFields(dictReadForeignFields)(Type_Data_RowList.RLProxy.value)(o));
          });
      };
  };
  var consWriteForeignFields = function (dictIsSymbol) {
      return function (dictWriteForeign) {
          return function (dictWriteForeignFields) {
              return function (dictCons) {
                  return function (dictLacks) {
                      return function (dictCons1) {
                          return new WriteForeignFields(function (v) {
                              return function (rec) {
                                  var rest = writeImplFields(dictWriteForeignFields)(Type_Data_RowList.RLProxy.value)(rec);
                                  var value = writeImpl(dictWriteForeign)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(rec));
                                  var result = Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(value))(rest);
                                  return result;
                              };
                          });
                      };
                  };
              };
          };
      };
  };
  var applyEither = function (dictSemigroup) {
      return function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Left(v.value0);
              };
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v1.value0);
              };
              if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0(v1.value0));
              };
              throw new Error("Failed pattern match at Simple.JSON (line 234, column 1 - line 234, column 90): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var exceptTApply = function (dictSemigroup) {
      return function (dictApplicative) {
          return function (fun) {
              return function (a) {
                  return Control_Monad_Except_Trans.ExceptT(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(applyEither(dictSemigroup))(Control_Monad_Except_Trans.runExceptT(fun)))(Control_Monad_Except_Trans.runExceptT(a)));
              };
          };
      };
  };
  var readFieldsCons = function (dictIsSymbol) {
      return function (dictReadForeign) {
          return function (dictReadForeignFields) {
              return function (dictLacks) {
                  return function (dictCons) {
                      return new ReadForeignFields(function (v) {
                          return function (obj) {
                              var rest = getFields(dictReadForeignFields)(Type_Data_RowList.RLProxy.value)(obj);
                              var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var withExcept$prime = Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(name)));
                              var first = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(withExcept$prime(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(Foreign_Index.readProp(name)(obj))))(function (value) {
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(value));
                              });
                              return exceptTApply(Data_List_Types.semigroupNonEmptyList)(Data_Identity.applicativeIdentity)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder))(first))(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  exports["readJSON"] = readJSON;
  exports["writeJSON"] = writeJSON;
  exports["ReadForeign"] = ReadForeign;
  exports["WriteForeign"] = WriteForeign;
  exports["readInt"] = readInt;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["readArray"] = readArray;
  exports["readRecord"] = readRecord;
  exports["readFieldsCons"] = readFieldsCons;
  exports["readFieldsNil"] = readFieldsNil;
  exports["writeForeignString"] = writeForeignString;
  exports["writeForeignInt"] = writeForeignInt;
  exports["writeForeignBoolean"] = writeForeignBoolean;
  exports["writeForeignArray"] = writeForeignArray;
  exports["recordWriteForeign"] = recordWriteForeign;
  exports["consWriteForeignFields"] = consWriteForeignFields;
  exports["nilWriteForeignFields"] = nilWriteForeignFields;
})(PS);
(function($PS) {
  
  $PS["LocalStorage"] = $PS["LocalStorage"] || {};
  var exports = $PS["LocalStorage"];
  var $foreign = $PS["LocalStorage"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Simple_JSON = $PS["Simple.JSON"];                  
  var setItem = function (dictWriteForeign) {
      return function (key) {
          return function (val) {
              return function () {
                  return $foreign.setItem_(key, Simple_JSON.writeJSON(dictWriteForeign)(val));
              };
          };
      };
  };                                                                   
  var getItem = function (dictReadForeign) {
      return function (key) {
          return function __do() {
              var itemString = $foreign.getItem_(key);
              return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)((function () {
                  var $2 = Simple_JSON.readJSON(dictReadForeign);
                  return function ($3) {
                      return Data_Either.hush($2($3));
                  };
              })())(Data_Nullable.toMaybe(itemString));
          };
      };
  };
  exports["setItem"] = setItem;
  exports["getItem"] = getItem;
})(PS);
(function(exports) {
  "use strict";
  var React =require("react"); 
  var createElement = React.createElement;

  exports.createComponent = (function() {
    // Begin component prototype functions
    // (`this`-dependent, defined outside `createComponent`
    // for a slight performance boost)
    function toSelf() {
      var instance = this;
      var setStateThen = function(update) {
        return function(effects) {
          return function() {
            instance.setState(function(state) {
              return { $$state: update(state.$$state) };
            }, effects);
          };
        };
      };
      var self = {
        props: instance.props.$$props,
        state: instance.state === null ? null : instance.state.$$state,
        setState: function(update) {
          return setStateThen(update)(undefined);
        },
        setStateThen: setStateThen,
        instance_: instance
      };
      return self;
    }

    function componentDidMount() {
      var didMount = this.$$spec.didMount;
      if (didMount !== undefined) {
        didMount(this.toSelf())();
      }
    }

    function shouldComponentUpdate(nextProps, nextState) {
      var shouldUpdate = this.$$spec.shouldUpdate;
      return shouldUpdate === undefined
        ? true
        : shouldUpdate(this.toSelf())({
            nextProps: nextProps.$$props,
            nextState: nextState === null ? null : nextState.$$state
          });
    }

    function componentDidUpdate(prevProps, prevState) {
      var didUpdate = this.$$spec.didUpdate;
      if (didUpdate !== undefined) {
        didUpdate(this.toSelf())({
          prevProps: prevProps.$$props,
          prevState: prevState === null ? null : prevState.$$state
        })();
      }
    }

    function componentWillUnmount() {
      this.$$mounted = false;
      var willUnmount = this.$$spec.willUnmount;
      if (willUnmount !== undefined) {
        willUnmount(this.toSelf())();
      }
    }

    function render() {
      return this.$$spec.render(this.toSelf());
    }
    // End component prototype functions

    return function(displayName) {
      var Component = function constructor(props) {
        this.$$mounted = true;
        this.$$spec = props.$$spec;
        this.state =
          // React may optimize components with no state,
          // so we leave state null if it was left as
          // the default value.
          this.$$spec.initialState === undefined
            ? null
            : { $$state: this.$$spec.initialState };
        return this;
      };

      Component.displayName = displayName;
      Component.prototype = Object.create(React.Component.prototype);
      Component.prototype.constructor = Component;
      Component.prototype.toSelf = toSelf;
      Component.prototype.shouldComponentUpdate = shouldComponentUpdate;
      Component.prototype.componentDidMount = componentDidMount;
      Component.prototype.componentDidUpdate = componentDidUpdate;
      Component.prototype.componentWillUnmount = componentWillUnmount;
      Component.prototype.render = render;

      return Component;
    };
  })();

  exports.runUpdate_ = function(update, self, action) {
    var sideEffects = null;
    self.instance_.setState(
      function(s) {
        var setStateSelf = self.instance_.toSelf();
        setStateSelf.state = s.$$state;
        var updates = update(setStateSelf, action);
        if (updates.effects !== null) {
          sideEffects = updates.effects;
        }
        if (updates.state !== null && updates.state !== s.$$state) {
          return { $$state: updates.state };
        } else {
          return null;
        }
      },
      function() {
        if (sideEffects !== null) {
          sideEffects(this.toSelf())();
        }
      }
    );
  };

  exports.make = function(_unionDict) {
    return function($$type) {
      return function($$spec) {
        var $$specPadded = {
          initialState: $$spec.initialState,
          render: $$spec.render,
          didMount: $$spec.didMount,
          shouldUpdate: $$spec.shouldUpdate,
          didUpdate: $$spec.didUpdate,
          willUnmount: $$spec.willUnmount
        };
        return function($$props) {
          var props = {
            $$props: $$props,
            $$spec: $$specPadded
          };
          return React.createElement($$type, props);
        };
      };
    };
  };

  function flattenDataProp(component, props) {
    var data = null;
    if (typeof component === "string" && props._data != null) {
      data = { _data: undefined };
      Object.entries(props._data).forEach(function(entry) {
        data["data-" + entry[0]] = entry[1];
      });
    }
    return data == null ? props : Object.assign({}, props, data);
  }

  exports.element_ = function(component, props, areChildrenDynamic) {
    var args = [component, flattenDataProp(component, props)];
    return createElement.apply(
      null,
      areChildrenDynamic || props.children == null
        ? args
        : args.concat(props.children)
    );
  };
})(PS["React.Basic"] = PS["React.Basic"] || {});
(function($PS) {
  
  $PS["React.Basic"] = $PS["React.Basic"] || {};
  var exports = $PS["React.Basic"];
  var $foreign = $PS["React.Basic"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                  
  var NoUpdate = (function () {
      function NoUpdate() {

      };
      NoUpdate.value = new NoUpdate();
      return NoUpdate;
  })();
  var Update = (function () {
      function Update(value0) {
          this.value0 = value0;
      };
      Update.create = function (value0) {
          return new Update(value0);
      };
      return Update;
  })();
  var SideEffects = (function () {
      function SideEffects(value0) {
          this.value0 = value0;
      };
      SideEffects.create = function (value0) {
          return new SideEffects(value0);
      };
      return SideEffects;
  })();
  var UpdateAndSideEffects = (function () {
      function UpdateAndSideEffects(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UpdateAndSideEffects.create = function (value0) {
          return function (value1) {
              return new UpdateAndSideEffects(value0, value1);
          };
      };
      return UpdateAndSideEffects;
  })();              
  var makeStateless = function (component) {
      return function (render) {
          return $foreign.make()(component)({
              initialState: Data_Unit.unit,
              render: function (self) {
                  return render(self.props);
              }
          });
      };
  };                                                                        
  var element = Data_Function_Uncurried.runFn2($foreign.element_);
  var buildStateUpdate = function (v) {
      if (v instanceof NoUpdate) {
          return {
              state: Data_Nullable["null"],
              effects: Data_Nullable["null"]
          };
      };
      if (v instanceof Update) {
          return {
              state: Data_Nullable.notNull(v.value0),
              effects: Data_Nullable["null"]
          };
      };
      if (v instanceof SideEffects) {
          return {
              state: Data_Nullable["null"],
              effects: Data_Nullable.notNull(v.value0)
          };
      };
      if (v instanceof UpdateAndSideEffects) {
          return {
              state: Data_Nullable.notNull(v.value0),
              effects: Data_Nullable.notNull(v.value1)
          };
      };
      throw new Error("Failed pattern match at React.Basic (line 433, column 20 - line 449, column 6): " + [ v.constructor.name ]);
  };
  var runUpdate = function (update) {
      return Effect_Uncurried.runEffectFn3($foreign.runUpdate_)(function (self, action) {
          return buildStateUpdate(update(self)(action));
      });
  };
  exports["createComponent"] = $foreign["createComponent"];
  exports["make"] = $foreign["make"];
  exports["NoUpdate"] = NoUpdate;
  exports["Update"] = Update;
  exports["UpdateAndSideEffects"] = UpdateAndSideEffects;
  exports["runUpdate"] = runUpdate;
  exports["makeStateless"] = makeStateless;
  exports["element"] = element;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign["unsafeCoerce"];
})(PS);
(function($PS) {
  
  $PS["React.Basic.DOM"] = $PS["React.Basic.DOM"] || {};
  var exports = $PS["React.Basic.DOM"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                                     
  var text = Unsafe_Coerce.unsafeCoerce;
  exports["text"] = text;
})(PS);
(function($PS) {
  
  $PS["React.Basic.Events"] = $PS["React.Basic.Events"] || {};
  var exports = $PS["React.Basic.Events"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                    
  var EventFn = function (x) {
      return x;
  };
  var unsafeEventFn = EventFn;
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var handler_ = function ($21) {
      return Effect_Uncurried.mkEffectFn1(Data_Function["const"]($21));
  };
  var handler = function (v) {
      return function (cb) {
          return function ($22) {
              return cb(v($22))();
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  exports["unsafeEventFn"] = unsafeEventFn;
  exports["handler"] = handler;
  exports["handler_"] = handler_;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  
  $PS["React.Basic.DOM.Events"] = $PS["React.Basic.DOM.Events"] || {};
  var exports = $PS["React.Basic.DOM.Events"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var targetValue = React_Basic_Events.unsafeEventFn(function (e) {
      return Data_Nullable.toMaybe(e.target.value);
  });
  var targetChecked = React_Basic_Events.unsafeEventFn(function (e) {
      return Data_Nullable.toMaybe(e.target.checked);
  });
  var target = React_Basic_Events.unsafeEventFn(function (e) {
      return e.target;
  });
  var stopPropagation = React_Basic_Events.unsafeEventFn(function (e) {
      return Effect_Unsafe.unsafePerformEffect(function __do() {
          e.stopPropagation();
          return e;
      });
  });
  var preventDefault = React_Basic_Events.unsafeEventFn(function (e) {
      return Effect_Unsafe.unsafePerformEffect(function __do() {
          e.preventDefault();
          return e;
      });
  });
  var key = React_Basic_Events.unsafeEventFn(function (e) {
      return Data_Nullable.toMaybe(e.key);
  });
  var capture = function (eventFn) {
      return React_Basic_Events.handler(Control_Semigroupoid.composeFlipped(React_Basic_Events.semigroupoidBuilder)(preventDefault)(Control_Semigroupoid.composeFlipped(React_Basic_Events.semigroupoidBuilder)(stopPropagation)(eventFn)));
  };
  var capture_ = function (cb) {
      return capture(Control_Category.identity(React_Basic_Events.categoryBuilder))(function (v) {
          return cb;
      });
  };
  exports["capture"] = capture;
  exports["capture_"] = capture_;
  exports["targetChecked"] = targetChecked;
  exports["targetValue"] = targetValue;
  exports["key"] = key;
})(PS);
(function($PS) {
  
  $PS["React.Basic.DOM.Internal"] = $PS["React.Basic.DOM.Internal"] || {};
  var exports = $PS["React.Basic.DOM.Internal"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                  
  var unsafeCreateDOMComponent = Unsafe_Coerce.unsafeCoerce;
  var css = Unsafe_Coerce.unsafeCoerce;
  exports["css"] = css;
  exports["unsafeCreateDOMComponent"] = unsafeCreateDOMComponent;
})(PS);
(function($PS) {
  
  $PS["React.Basic.DOM.Generated"] = $PS["React.Basic.DOM.Generated"] || {};
  var exports = $PS["React.Basic.DOM.Generated"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var ul$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("ul");
  };
  var ul = function (dictUnion) {
      return React_Basic.element(ul$prime());
  };
  var strong$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("strong");
  };
  var strong = function (dictUnion) {
      return React_Basic.element(strong$prime());
  };
  var strong_ = function (children) {
      return strong()({
          children: children
      });
  };
  var span$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("span");
  };
  var span = function (dictUnion) {
      return React_Basic.element(span$prime());
  };
  var section$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("section");
  };
  var section = function (dictUnion) {
      return React_Basic.element(section$prime());
  };
  var li$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("li");
  };
  var li = function (dictUnion) {
      return React_Basic.element(li$prime());
  };
  var li_ = function (children) {
      return li()({
          children: children
      });
  };
  var label$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("label");
  };
  var label = function (dictUnion) {
      return React_Basic.element(label$prime());
  };
  var input$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("input");
  };
  var input = function (dictUnion) {
      return React_Basic.element(input$prime());
  };
  var header$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("header");
  };
  var header = function (dictUnion) {
      return React_Basic.element(header$prime());
  };
  var h1$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("h1");
  };
  var h1 = function (dictUnion) {
      return React_Basic.element(h1$prime());
  };
  var h1_ = function (children) {
      return h1()({
          children: children
      });
  };
  var footer$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("footer");
  };
  var footer = function (dictUnion) {
      return React_Basic.element(footer$prime());
  };
  var div$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("div");
  };
  var div = function (dictUnion) {
      return React_Basic.element(div$prime());
  };
  var button$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("button");
  };
  var button = function (dictUnion) {
      return React_Basic.element(button$prime());
  };
  var a$prime = function (dictUnion) {
      return React_Basic_DOM_Internal.unsafeCreateDOMComponent("a");
  };
  var a = function (dictUnion) {
      return React_Basic.element(a$prime());
  };
  exports["a"] = a;
  exports["button"] = button;
  exports["div"] = div;
  exports["footer"] = footer;
  exports["h1_"] = h1_;
  exports["header"] = header;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["section"] = section;
  exports["span"] = span;
  exports["strong_"] = strong_;
  exports["ul"] = ul;
})(PS);
(function(exports) {
  "use strict";

  exports.startNavigation = function(navFn) {
    window.onhashchange = function () {
      // We double call here because navFn returns an effect
      // (which is just a wrapper function, so we unwrap)
      navFn(location.hash)();
    };
  };
})(PS["Todo.App"] = PS["Todo.App"] || {});
(function($PS) {
  
  $PS["Todo.View"] = $PS["Todo.View"] || {};
  var exports = $PS["Todo.View"];// Generated by purs version 0.13.6
  var classy = function (element) {
      return function (className) {
          return function (children) {
              return element({
                  className: className,
                  children: children
              });
          };
      };
  };
  exports["classy"] = classy;
})(PS);
(function($PS) {
  
  $PS["Todo.Footer"] = $PS["Todo.Footer"] || {};
  var exports = $PS["Todo.Footer"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Generic_EnumEncoding = $PS["Foreign.Generic.EnumEncoding"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var Simple_JSON = $PS["Simple.JSON"];
  var Todo_View = $PS["Todo.View"];                  
  var All = (function () {
      function All() {

      };
      All.value = new All();
      return All;
  })();
  var Completed = (function () {
      function Completed() {

      };
      Completed.value = new Completed();
      return Completed;
  })();
  var Active = (function () {
      function Active() {

      };
      Active.value = new Active();
      return Active;
  })();
  var genericVisibility = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof All) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Completed) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Active) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Todo.Footer (line 24, column 1 - line 24, column 58): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return All.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Completed.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Active.value;
      };
      throw new Error("Failed pattern match at Todo.Footer (line 24, column 1 - line 24, column 58): " + [ x.constructor.name ]);
  });
  var readVisibility = new Simple_JSON.ReadForeign(Foreign_Generic_EnumEncoding.genericDecodeEnum(genericVisibility)(Foreign_Generic_EnumEncoding.sumGenericDecodeEnum(Foreign_Generic_EnumEncoding.ctorNoArgsGenericDecodeEnum(new Data_Symbol.IsSymbol(function () {
      return "All";
  })))(Foreign_Generic_EnumEncoding.sumGenericDecodeEnum(Foreign_Generic_EnumEncoding.ctorNoArgsGenericDecodeEnum(new Data_Symbol.IsSymbol(function () {
      return "Completed";
  })))(Foreign_Generic_EnumEncoding.ctorNoArgsGenericDecodeEnum(new Data_Symbol.IsSymbol(function () {
      return "Active";
  })))))({
      constructorTagTransform: Data_String_Common.toLower
  }));
  var showVisibility = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericVisibility)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "All";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Completed";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Active";
  }))))));
  var writeVisibility = new Simple_JSON.WriteForeign(Foreign_Generic_EnumEncoding.genericEncodeEnum(genericVisibility)(Foreign_Generic_EnumEncoding.sumGenericEncodeEnum(Foreign_Generic_EnumEncoding.ctorNoArgsGenericEncodeEnum(new Data_Symbol.IsSymbol(function () {
      return "All";
  })))(Foreign_Generic_EnumEncoding.sumGenericEncodeEnum(Foreign_Generic_EnumEncoding.ctorNoArgsGenericEncodeEnum(new Data_Symbol.IsSymbol(function () {
      return "Completed";
  })))(Foreign_Generic_EnumEncoding.ctorNoArgsGenericEncodeEnum(new Data_Symbol.IsSymbol(function () {
      return "Active";
  })))))({
      constructorTagTransform: Data_String_Common.toLower
  }));
  var eqVisibility = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof All && y instanceof All) {
              return true;
          };
          if (x instanceof Completed && y instanceof Completed) {
              return true;
          };
          if (x instanceof Active && y instanceof Active) {
              return true;
          };
          return false;
      };
  });
  var component = React_Basic.createComponent("Footer");
  var changeVisibilityLink = function (uri) {
      return function (visibility) {
          return function (actualVisibility) {
              return React_Basic_DOM_Generated.li_([ React_Basic_DOM_Generated.a()({
                  className: (function () {
                      var $13 = Data_Eq.eq(eqVisibility)(visibility)(actualVisibility);
                      if ($13) {
                          return "selected";
                      };
                      return "";
                  })(),
                  href: uri,
                  children: [ React_Basic_DOM.text(Data_Show.show(showVisibility)(visibility)) ]
              }) ]);
          };
      };
  };
  var render = function (props) {
      var tasksCompleted = Data_Array.length(Data_Array.filter(function (v) {
          return v.completed;
      })(props.tasks));
      var tasksLeft = Data_Array.length(props.tasks) - tasksCompleted | 0;
      var pluralizedItem = (function () {
          var $14 = tasksLeft === 1;
          if ($14) {
              return " item";
          };
          return " items";
      })();
      return React_Basic_DOM_Generated.footer()({
          className: "footer",
          hidden: Data_Array["null"](props.tasks),
          children: [ Todo_View.classy(React_Basic_DOM_Generated.span())("todo-count")([ React_Basic_DOM_Generated.strong_([ React_Basic_DOM.text(Data_Show.show(Data_Show.showInt)(tasksLeft)) ]), React_Basic_DOM.text(pluralizedItem + " left") ]), Todo_View.classy(React_Basic_DOM_Generated.ul())("filters")([ changeVisibilityLink("#/")(All.value)(props.visibility), React_Basic_DOM.text(" "), changeVisibilityLink("#/active")(Active.value)(props.visibility), React_Basic_DOM.text(" "), changeVisibilityLink("#/completed")(Completed.value)(props.visibility) ]), React_Basic_DOM_Generated.button()({
              className: "clear-completed",
              hidden: tasksCompleted === 0,
              onClick: props.onClearCompleted,
              children: [ React_Basic_DOM.text("Clear completed") ]
          }) ]
      });
  };
  var footer = React_Basic.makeStateless(component)(render);
  exports["All"] = All;
  exports["Completed"] = Completed;
  exports["Active"] = Active;
  exports["footer"] = footer;
  exports["readVisibility"] = readVisibility;
  exports["writeVisibility"] = writeVisibility;
})(PS);
(function($PS) {
  
  $PS["Todo.Task"] = $PS["Todo.Task"] || {};
  var exports = $PS["Todo.Task"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_Common = $PS["Data.String.Common"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var Todo_View = $PS["Todo.View"];                  
  var Focus = (function () {
      function Focus() {

      };
      Focus.value = new Focus();
      return Focus;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var KeyDown = (function () {
      function KeyDown(value0) {
          this.value0 = value0;
      };
      KeyDown.create = function (value0) {
          return new KeyDown(value0);
      };
      return KeyDown;
  })();
  var Commit = (function () {
      function Commit() {

      };
      Commit.value = new Commit();
      return Commit;
  })();
  var taskComponent = React_Basic.createComponent("Task");
  var render = function (v) {
      var description = Data_Maybe.fromMaybe(v.props.task.description)(v.state.edits);
      var commitAction = (function () {
          var newDescription = Data_String_Common.trim(Data_Maybe.fromMaybe("")(v.state.edits));
          if (newDescription === "") {
              return React_Basic.NoUpdate.value;
          };
          var state$prime = {
              edits: Data_Maybe.Nothing.value
          };
          return new React_Basic.UpdateAndSideEffects(state$prime, Data_Function["const"](v.props.onCommit(newDescription)));
      })();
      var send = React_Basic.runUpdate(function (_self) {
          return function (v1) {
              if (v1 instanceof Focus) {
                  return React_Basic.Update.create({
                      edits: new Data_Maybe.Just(v.props.task.description)
                  });
              };
              if (v1 instanceof Change) {
                  return new React_Basic.Update({
                      edits: v1.value0
                  });
              };
              if (v1 instanceof KeyDown) {
                  if (v1.value0 instanceof Data_Maybe.Just && v1.value0.value0 === "Escape") {
                      return React_Basic.Update.create({
                          edits: Data_Maybe.Nothing.value
                      });
                  };
                  if (v1.value0 instanceof Data_Maybe.Just && v1.value0.value0 === "Enter") {
                      return commitAction;
                  };
                  return React_Basic.NoUpdate.value;
              };
              if (v1 instanceof Commit) {
                  return commitAction;
              };
              throw new Error("Failed pattern match at Todo.Task (line 97, column 7 - line 110, column 31): " + [ v1.constructor.name ]);
          };
      });
      var classNames = Data_String_Common.joinWith(" ")([ Data_Monoid.guard(Data_Monoid.monoidString)(Data_Maybe.isJust(v.state.edits))("editing"), Data_Monoid.guard(Data_Monoid.monoidString)(v.props.task.completed)("completed") ]);
      return React_Basic_DOM_Generated.li()({
          className: classNames,
          children: [ Todo_View.classy(React_Basic_DOM_Generated.div())("view")([ React_Basic_DOM_Generated.input()({
              className: "toggle",
              type: "checkbox",
              checked: v.props.task.completed,
              onChange: React_Basic_Events.handler_(v.props.onCheck)
          }), React_Basic_DOM_Generated.label()({
              onDoubleClick: React_Basic_DOM_Events.capture_(send(v)(Focus.value)),
              children: [ React_Basic_DOM.text(description) ]
          }), React_Basic_DOM_Generated.button()({
              className: "destroy",
              onClick: React_Basic_Events.handler_(v.props.onDelete)
          }) ]), React_Basic_DOM_Generated.input()({
              className: "edit",
              value: description,
              name: "title",
              onChange: React_Basic_DOM_Events.capture(React_Basic_DOM_Events.targetValue)((function () {
                  var $16 = send(v);
                  return function ($17) {
                      return $16(Change.create($17));
                  };
              })()),
              onBlur: React_Basic_DOM_Events.capture_(send(v)(Commit.value)),
              onKeyDown: React_Basic_Events.handler(React_Basic_DOM_Events.key)((function () {
                  var $18 = send(v);
                  return function ($19) {
                      return $18(KeyDown.create($19));
                  };
              })())
          }) ]
      });
  };
  var initialState = {
      edits: Data_Maybe.Nothing.value
  };
  var component = function (props) {
      return React_Basic.make()(taskComponent)({
          render: render,
          initialState: initialState
      })(props);
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  
  $PS["Todo.App"] = $PS["Todo.App"] || {};
  var exports = $PS["Todo.App"];
  var $foreign = $PS["Todo.App"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var LocalStorage = $PS["LocalStorage"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var Simple_JSON = $PS["Simple.JSON"];
  var Todo_Footer = $PS["Todo.Footer"];
  var Todo_Task = $PS["Todo.Task"];
  var Todo_View = $PS["Todo.View"];                  
  var EditNewTodo = (function () {
      function EditNewTodo(value0) {
          this.value0 = value0;
      };
      EditNewTodo.create = function (value0) {
          return new EditNewTodo(value0);
      };
      return EditNewTodo;
  })();
  var SubmitNewTodo = (function () {
      function SubmitNewTodo(value0) {
          this.value0 = value0;
      };
      SubmitNewTodo.create = function (value0) {
          return new SubmitNewTodo(value0);
      };
      return SubmitNewTodo;
  })();
  var TaskCheck = (function () {
      function TaskCheck(value0) {
          this.value0 = value0;
      };
      TaskCheck.create = function (value0) {
          return new TaskCheck(value0);
      };
      return TaskCheck;
  })();
  var TaskUpdate = (function () {
      function TaskUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TaskUpdate.create = function (value0) {
          return function (value1) {
              return new TaskUpdate(value0, value1);
          };
      };
      return TaskUpdate;
  })();
  var TaskDelete = (function () {
      function TaskDelete(value0) {
          this.value0 = value0;
      };
      TaskDelete.create = function (value0) {
          return new TaskDelete(value0);
      };
      return TaskDelete;
  })();
  var ClearCompleted = (function () {
      function ClearCompleted() {

      };
      ClearCompleted.value = new ClearCompleted();
      return ClearCompleted;
  })();
  var CheckAllTasks = (function () {
      function CheckAllTasks(value0) {
          this.value0 = value0;
      };
      CheckAllTasks.create = function (value0) {
          return new CheckAllTasks(value0);
      };
      return CheckAllTasks;
  })();
  var UpdateVisibility = (function () {
      function UpdateVisibility(value0) {
          this.value0 = value0;
      };
      UpdateVisibility.create = function (value0) {
          return new UpdateVisibility(value0);
      };
      return UpdateVisibility;
  })();
  var LoadState = (function () {
      function LoadState(value0) {
          this.value0 = value0;
      };
      LoadState.create = function (value0) {
          return new LoadState(value0);
      };
      return LoadState;
  })();
  var Noop = (function () {
      function Noop() {

      };
      Noop.value = new Noop();
      return Noop;
  })();
  var taskList = function (v) {
      var toggleAllAttributes = {
          className: "toggle-all",
          id: "toggle-all",
          type: "checkbox",
          checked: Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v1) {
              return v1.completed;
          })(v.tasks),
          onChange: v.checkAllTasks
      };
      var taskView = function (task) {
          return Todo_Task.component({
              key: task.id,
              task: task,
              onCheck: v.onCheck(task.id),
              onDelete: v.onDelete(task.id),
              onCommit: v.onCommit(task.id)
          });
      };
      var isVisible = function (task) {
          if (v.visibility instanceof Todo_Footer.Completed) {
              return task.completed;
          };
          if (v.visibility instanceof Todo_Footer.Active) {
              return !task.completed;
          };
          return true;
      };
      return React_Basic_DOM_Generated.section()({
          className: "main",
          style: React_Basic_DOM_Internal.css({
              visibility: (function () {
                  var $20 = Data_Array["null"](v.tasks);
                  if ($20) {
                      return "hidden";
                  };
                  return "visible";
              })()
          }),
          children: [ React_Basic_DOM_Generated.input()(toggleAllAttributes), React_Basic_DOM_Generated.label()({
              htmlFor: "toggle-all",
              children: [ React_Basic_DOM.text("Mark all as complete") ]
          }), Todo_View.classy(React_Basic_DOM_Generated.ul())("todo-list")(Data_Functor.map(Data_Functor.functorArray)(taskView)(Data_Array.filter(isVisible)(v.tasks))) ]
      });
  };
  var taskEntry = function (value) {
      return function (onEdit) {
          return function (onKeyDown) {
              var attributes = {
                  className: "new-todo",
                  placeholder: "What needs to be done?",
                  autoFocus: true,
                  value: value,
                  name: "newTodo",
                  onChange: onEdit,
                  onKeyDown: onKeyDown
              };
              return Todo_View.classy(React_Basic_DOM_Generated.header())("header")([ React_Basic_DOM_Generated.h1_([ React_Basic_DOM.text("todos") ]), React_Basic_DOM_Generated.input()(attributes) ]);
          };
      };
  };
  var localStorageKey = "todomvc-purescript-state";
  var saveState = function (state) {
      return LocalStorage.setItem(Simple_JSON.recordWriteForeign()(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "newTodo";
      }))(Simple_JSON.writeForeignString)(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "tasks";
      }))(Simple_JSON.writeForeignArray(Simple_JSON.recordWriteForeign()(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "completed";
      }))(Simple_JSON.writeForeignBoolean)(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "description";
      }))(Simple_JSON.writeForeignString)(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "id";
      }))(Simple_JSON.writeForeignInt)(Simple_JSON.nilWriteForeignFields)()()())()()())()()())))(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "uid";
      }))(Simple_JSON.writeForeignInt)(Simple_JSON.consWriteForeignFields(new Data_Symbol.IsSymbol(function () {
          return "visibility";
      }))(Todo_Footer.writeVisibility)(Simple_JSON.nilWriteForeignFields)()()())()()())()()())()()()))(localStorageKey)(state);
  };
  var initialState = {
      tasks: [  ],
      visibility: Todo_Footer.All.value,
      newTodo: "",
      uid: 0
  };
  var component = React_Basic.createComponent("App");
  var app = function (v) {
      var update = function (self) {
          return function (action) {
              if (action instanceof EditNewTodo) {
                  return new React_Basic.Update({
                      newTodo: Data_Maybe.fromMaybe("")(action.value0),
                      uid: self.state.uid,
                      tasks: self.state.tasks,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof SubmitNewTodo) {
                  var newTodo = {
                      description: action.value0,
                      id: self.state.uid,
                      completed: false
                  };
                  return new React_Basic.Update({
                      newTodo: "",
                      tasks: Data_Array.cons(newTodo)(self.state.tasks),
                      uid: self.state.uid + 1 | 0,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof TaskCheck) {
                  var negateCheck = function (task) {
                      var $30 = task.id === action.value0;
                      if ($30) {
                          return {
                              completed: !task.completed,
                              id: task.id,
                              description: task.description
                          };
                      };
                      return task;
                  };
                  return new React_Basic.Update({
                      tasks: Data_Functor.map(Data_Functor.functorArray)(negateCheck)(self.state.tasks),
                      newTodo: self.state.newTodo,
                      uid: self.state.uid,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof TaskUpdate) {
                  var updateTask = function (task) {
                      var $32 = task.id === action.value0;
                      if ($32) {
                          return {
                              description: action.value1,
                              id: task.id,
                              completed: task.completed
                          };
                      };
                      return task;
                  };
                  return new React_Basic.Update({
                      tasks: Data_Functor.map(Data_Functor.functorArray)(updateTask)(self.state.tasks),
                      newTodo: self.state.newTodo,
                      uid: self.state.uid,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof TaskDelete) {
                  var tasks$prime = Data_Array.filter((function () {
                      var $46 = Data_Eq.notEq(Data_Eq.eqInt)(action.value0);
                      return function ($47) {
                          return $46((function (v1) {
                              return v1.id;
                          })($47));
                      };
                  })())(self.state.tasks);
                  return new React_Basic.Update({
                      tasks: tasks$prime,
                      newTodo: self.state.newTodo,
                      uid: self.state.uid,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof ClearCompleted) {
                  var tasks$prime = Data_Array.filter(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(function (v1) {
                      return v1.completed;
                  }))(self.state.tasks);
                  return new React_Basic.Update({
                      tasks: tasks$prime,
                      newTodo: self.state.newTodo,
                      uid: self.state.uid,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof CheckAllTasks) {
                  var toggle = function (task) {
                      return {
                          completed: Data_Maybe.fromMaybe(task.completed)(action.value0),
                          description: task.description,
                          id: task.id
                      };
                  };
                  var tasks$prime = Data_Functor.map(Data_Functor.functorArray)(toggle)(self.state.tasks);
                  return new React_Basic.Update({
                      tasks: tasks$prime,
                      newTodo: self.state.newTodo,
                      uid: self.state.uid,
                      visibility: self.state.visibility
                  });
              };
              if (action instanceof UpdateVisibility) {
                  return new React_Basic.Update({
                      visibility: action.value0,
                      newTodo: self.state.newTodo,
                      tasks: self.state.tasks,
                      uid: self.state.uid
                  });
              };
              if (action instanceof LoadState) {
                  return new React_Basic.Update(action.value0);
              };
              if (action instanceof Noop) {
                  return React_Basic.NoUpdate.value;
              };
              throw new Error("Failed pattern match at Todo.App (line 111, column 7 - line 173, column 19): " + [ action.constructor.name ]);
          };
      };
      var send = React_Basic.runUpdate(update);
      var render = function (self) {
          var onTaskUpdate = function (id) {
              return function (newDescription) {
                  return send(self)(new TaskUpdate(id, newDescription));
              };
          };
          var onTaskDelete = function (id) {
              return send(self)(new TaskDelete(id));
          };
          var onTaskCheck = function (id) {
              return send(self)(new TaskCheck(id));
          };
          var onKeyDown = (function () {
              var newDescription = Data_String_Common.trim(self.state.newTodo);
              var hasNewDescription = !Data_String_Common["null"](newDescription);
              return React_Basic_Events.handler(React_Basic_DOM_Events.key)(function (key) {
                  return send(self)((function () {
                      if (key instanceof Data_Maybe.Just && (key.value0 === "Enter" && hasNewDescription)) {
                          return new SubmitNewTodo(newDescription);
                      };
                      return Noop.value;
                  })());
              });
          })();
          var onEditNewTodo = React_Basic_DOM_Events.capture(React_Basic_DOM_Events.targetValue)((function () {
              var $48 = send(self);
              return function ($49) {
                  return $48(EditNewTodo.create($49));
              };
          })());
          var clearCompleted = React_Basic_DOM_Events.capture_(send(self)(ClearCompleted.value));
          var checkAllTasks = React_Basic_Events.handler(React_Basic_DOM_Events.targetChecked)((function () {
              var $50 = send(self);
              return function ($51) {
                  return $50(CheckAllTasks.create($51));
              };
          })());
          return Todo_View.classy(React_Basic_DOM_Generated.div())("todomvc-wrapper")([ Todo_View.classy(React_Basic_DOM_Generated.section())("todoapp")([ taskEntry(self.state.newTodo)(onEditNewTodo)(onKeyDown), taskList({
              tasks: self.state.tasks,
              visibility: self.state.visibility,
              onCheck: onTaskCheck,
              onDelete: onTaskDelete,
              onCommit: onTaskUpdate,
              checkAllTasks: checkAllTasks
          }), Todo_Footer.footer({
              tasks: self.state.tasks,
              onClearCompleted: clearCompleted,
              visibility: self.state.visibility
          }) ]) ]);
      };
      var didUpdate = function (self) {
          return function (v1) {
              return saveState(self.state);
          };
      };
      var didMount = function (v1) {
          var setVisibility = function (visibility) {
              return send(v1)(new UpdateVisibility(visibility));
          };
          var matchRoutes = function (hash) {
              if (hash === "#/") {
                  return setVisibility(Todo_Footer.All.value);
              };
              if (hash === "#/active") {
                  return setVisibility(Todo_Footer.Active.value);
              };
              if (hash === "#/completed") {
                  return setVisibility(Todo_Footer.Completed.value);
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
          return function __do() {
              $foreign.startNavigation(matchRoutes);
              var persisted = LocalStorage.getItem(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "newTodo";
              }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "tasks";
              }))(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "completed";
              }))(Simple_JSON.readBoolean)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "description";
              }))(Simple_JSON.readString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Simple_JSON.readInt)(Simple_JSON.readFieldsNil)()())()())()())))(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "uid";
              }))(Simple_JSON.readInt)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "visibility";
              }))(Todo_Footer.readVisibility)(Simple_JSON.readFieldsNil)()())()())()())()()))(localStorageKey)();
              if (persisted instanceof Data_Maybe.Just) {
                  return send(v1)(new LoadState(persisted.value0))();
              };
              return Data_Unit.unit;
          };
      };
      return React_Basic.make()(component)({
          initialState: initialState,
          didMount: didMount,
          render: render,
          didUpdate: didUpdate
      })({});
  };
  exports["startNavigation"] = $foreign["startNavigation"];
  exports["initialState"] = initialState;
  exports["localStorageKey"] = localStorageKey;
  exports["saveState"] = saveState;
  exports["EditNewTodo"] = EditNewTodo;
  exports["SubmitNewTodo"] = SubmitNewTodo;
  exports["TaskCheck"] = TaskCheck;
  exports["TaskUpdate"] = TaskUpdate;
  exports["TaskDelete"] = TaskDelete;
  exports["ClearCompleted"] = ClearCompleted;
  exports["CheckAllTasks"] = CheckAllTasks;
  exports["UpdateVisibility"] = UpdateVisibility;
  exports["LoadState"] = LoadState;
  exports["Noop"] = Noop;
  exports["component"] = component;
  exports["app"] = app;
  exports["taskEntry"] = taskEntry;
  exports["taskList"] = taskList;
})(PS);